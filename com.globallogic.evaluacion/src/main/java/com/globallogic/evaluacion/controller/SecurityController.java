/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.globallogic.evaluacion.controller;

import java.net.URI;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.globallogic.evaluacion.dto.ErrorDTO;
import com.globallogic.evaluacion.model.User;
import com.globallogic.evaluacion.service.LoginService;


@RestController("/")
public class SecurityController {
	
	@Autowired LoginService loginSvc;

	@GetMapping("/")
	public String hello() {
		return "Hello GlobalLogic!";
	}   
	
	   
	@PostMapping("/sign-up")
	public ResponseEntity<Object> signUp(@RequestBody User newUser) {
		Object result = null;
		HttpStatus status = HttpStatus.OK;
		
		try {
			List<String> errors = loginSvc.validateSignUp(newUser);
			User createdUser = null;
			
			if(errors == null || errors.size() == 0) {
				createdUser = loginSvc.saveNewUser(newUser);
				result = createdUser;
			} else {
				status = HttpStatus.BAD_REQUEST;
				result = new ErrorDTO(status.value(), errors);
			}
		} catch (Exception e) {
			status = HttpStatus.INTERNAL_SERVER_ERROR;
			result = new ErrorDTO(status.value(), status.getReasonPhrase());
		}
	   
		return ResponseEntity.status(status).body(result);
	}


	@GetMapping("/login")
	public ResponseEntity<Object> login(@RequestParam String token) {
		Object result = null;
		HttpStatus status = HttpStatus.OK;

		User user;
		try {
			user = loginSvc.readUserByToken(token);
			
			if(user != null)
				result = user;
			else {
				status = HttpStatus.BAD_REQUEST;
				result = new ErrorDTO(status.value(), "Invalid token");
			}
			
		} catch (Exception e) {
			status = HttpStatus.INTERNAL_SERVER_ERROR;
			result = new ErrorDTO(status.value(), status.getReasonPhrase());
		}
		
		return ResponseEntity.status(status).body(result);
	}   

}
